# 1.Select
a=[3,2,5,1,4]

n=len(a)
for i in range(n):
    m=i
    for j in range(i+1,n):
        if a[m]>a[j]:
            a[m],a[j]=a[j],a[m]
            print(a)
print(a)


#2.Bubble
a=[3,2,5,1,4]
n=len(a)
for i in range(n):
    for j in range(n-1-i):
        if a[j]>a[j+1]:
            a[j],a[j+1]=a[j+1],a[j]
            print(a)


#3.Insert
def insertionSort(a,n):
    for i in range(1,n):
        v,j=a[i],i
        
        while a[j-1]>v and j>0:
            a[j]=a[j-1]
            j-=1
        a[j]=v
   

a=[4,2,6,4,1,5,3]
N=len(a)
res=[]
print(a)
insertionSort(a,N)

print(a)


#4.Quick
def quicksort(a,l,r):
    if r>l:
        v,i,j=a[r],l-1,r
        while True:
            i+=1
            while a[i]>v:
                i+=1
            j-=1
            while a[j]<v:
                j-=1
            if i>=j:
                break
            print(a)
            a[i],a[j]=a[j],a[i]
        a[i],a[r]=a[r],a[i]
        quicksort(a,l,i-1)
        quicksort(a,i+1,r)
        print(a)

a=[4,3,7,8,5,1,2,6]
n=len(a)

quicksort(a,0,n-1)
print(a)


#5.Merge
def mergesort(a,l,r):
    if r>l:
        mid=int((r+l)/2)
        mergesort(a,l,mid)
        mergesort(a,mid+1,r)
        for i in range(mid+1,l,-1):
            b[i-1]=a[i-1]
        i-=1
        
        for j in range(mid ,r):
            b[r+mid-j]=a[j+1]
        j+=1
        for k in range(1,r+1):
            if b[i]<b[j]:
                a[k]=b[i]
                i+=1
            else:
                a[k]=b[j]
                j-=1
                

import random
N=10
a=[]
a.append(None)
for i in range(N):
    a.append(random.randint(1,N))
b=a.copy()
print(a)
mergesort(a,1,N)

print(a)


#6.Heap
def summary(new,x):
    
    new.append(x)
    
    return new


def heapify(a,hap,f):
    
    n=len(a)
    for i in range(1,n):
        c=i
        while(c!=0):
            root=int((c-1)/2)
            if a[c]>a[root]:
                a[c],a[root]=a[root],a[c]
            c=root
       
    a[0],a[n-1]=a[n-1],a[0]
    hap=summary(hap,a[n-1])
    a.pop()
    
    if len(hap)==f:
        print(hap)
        
    if n>1:
        heapify(a,hap,f)
    
    return a
    

a=[6,2,8,1,3,9,4,5,10,7]
f=len(a)
hap=[]
heapify(a,hap,f)